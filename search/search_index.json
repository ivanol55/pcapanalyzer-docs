{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PCAPAnalyzer project documentation Welcome! This is the site where you'll find reference documentation for all things PCAPAnalyzer, from frontend usage, to backend management, to API interaction. Documentation structure getting started - your starting point prerequisites - what you need to setup first installation - let's set you up main server - The base install agent - gather data from other sources post-install - what you should know frontend - Where you'll find documentation about UI interaction and features. login - web authentication homepage - a quick summary packetStream - data filtering dataGlance - quick, usually needed info queryRunner - roll your own SQL dbCreator - analyze your own pcaps database picker - manage database usage About - manage internal tokens User management - manage webUI users API management - manage API tokens backend .my.cnf - application information packetStream - constant data gathering PCAPAnalyzer IDS - get attack warnings by mail analysisGenerator - generate custom database reports API authentication - allowing requests endpoints - what can you do? dblist - listing databases rawnumbers - quick data for dashboards insights - dataGlance in JSON format reference - Quick query and answer manuals","title":"Home"},{"location":"#pcapanalyzer-project-documentation","text":"Welcome! This is the site where you'll find reference documentation for all things PCAPAnalyzer, from frontend usage, to backend management, to API interaction.","title":"PCAPAnalyzer project documentation"},{"location":"#documentation-structure","text":"getting started - your starting point prerequisites - what you need to setup first installation - let's set you up main server - The base install agent - gather data from other sources post-install - what you should know frontend - Where you'll find documentation about UI interaction and features. login - web authentication homepage - a quick summary packetStream - data filtering dataGlance - quick, usually needed info queryRunner - roll your own SQL dbCreator - analyze your own pcaps database picker - manage database usage About - manage internal tokens User management - manage webUI users API management - manage API tokens backend .my.cnf - application information packetStream - constant data gathering PCAPAnalyzer IDS - get attack warnings by mail analysisGenerator - generate custom database reports API authentication - allowing requests endpoints - what can you do? dblist - listing databases rawnumbers - quick data for dashboards insights - dataGlance in JSON format reference - Quick query and answer manuals","title":"Documentation structure"},{"location":"about/","text":"About this project This is the documentation for the PCAPAnalyzer project, created by Ivan Mendez , Sergi pellejero and Luis Portillo . All parts of this project, both this docummentation and the program itself, are licensed under the GNU General Public License v3 .","title":"About"},{"location":"about/#about-this-project","text":"This is the documentation for the PCAPAnalyzer project, created by Ivan Mendez , Sergi pellejero and Luis Portillo . All parts of this project, both this docummentation and the program itself, are licensed under the GNU General Public License v3 .","title":"About this project"},{"location":"getting-started/installation/","text":"Installing the server Once all of the system requirements are met, you can proceed on installing your environment. First, you need to setup the main server environment. Server install To install the server environment: git clone the PCAPAnalyzer installer repo cd to the cloned repo on the pcapanalyzer folder Navigate to the install folder Run the installer.py script with python3 installer.py when prompted for a confirmation, choose y or Y to enter the install script When prompted, enter s or S to perform a full server install. [!] If you already have a server install, you can upgrade it with u or U You will be asked to input a machineid. Choose a unique identifier for the host, like its hostname. Input the directory where you want the system to be installed. This directory needs to be inside one of your webroots accessible by apache2 . Input the postgresql admin user to create the environment. input the admin postgresql user password used to remotely connect to the system [!] The password is visible in plaintext in the terminal in this step. Be careful . Input the IP address where the postgresql install is set up Input the domain that the apache2 virtualhost will listen on. From the listed options, provide the system name of the interface you want the network sniffer to listen on. [!] you can input any to listen on all of the system's interfaces, but you can only have one entry. When the install is done, you will be provided with the pcapanalyzer agent password. Save this password, because it will be stored on the .my.cnf file, and you will probably need it later. You will be given a web frontend password for the admin account. save these credentials , because they are only stored on the database with a non-reversible cryptography algorithm and is not retrievable otherwise. If you want to, enable data logging on the PCAPAnalyzer server with service packetstream start . Once this installation is complete, you will have a functional PCAPAnalyzer install to use. To capture data from other machines, continue to the next section.","title":"Installation"},{"location":"getting-started/installation/#installing-the-server","text":"Once all of the system requirements are met, you can proceed on installing your environment. First, you need to setup the main server environment.","title":"Installing the server"},{"location":"getting-started/installation/#server-install","text":"To install the server environment: git clone the PCAPAnalyzer installer repo cd to the cloned repo on the pcapanalyzer folder Navigate to the install folder Run the installer.py script with python3 installer.py when prompted for a confirmation, choose y or Y to enter the install script When prompted, enter s or S to perform a full server install. [!] If you already have a server install, you can upgrade it with u or U You will be asked to input a machineid. Choose a unique identifier for the host, like its hostname. Input the directory where you want the system to be installed. This directory needs to be inside one of your webroots accessible by apache2 . Input the postgresql admin user to create the environment. input the admin postgresql user password used to remotely connect to the system [!] The password is visible in plaintext in the terminal in this step. Be careful . Input the IP address where the postgresql install is set up Input the domain that the apache2 virtualhost will listen on. From the listed options, provide the system name of the interface you want the network sniffer to listen on. [!] you can input any to listen on all of the system's interfaces, but you can only have one entry. When the install is done, you will be provided with the pcapanalyzer agent password. Save this password, because it will be stored on the .my.cnf file, and you will probably need it later. You will be given a web frontend password for the admin account. save these credentials , because they are only stored on the database with a non-reversible cryptography algorithm and is not retrievable otherwise. If you want to, enable data logging on the PCAPAnalyzer server with service packetstream start . Once this installation is complete, you will have a functional PCAPAnalyzer install to use. To capture data from other machines, continue to the next section.","title":"Server install"},{"location":"getting-started/post-install/","text":"Installing the agent When you already have a full server install, you may want to install the agent on host machines to gather data from them. The install steps for the agent are: git clone the PCAPAnalyzer installer repo cd to the cloned repo on the pcapanalyzer folder Navigate to the install folder Run the installer.py script with python3 installer.py when prompted for a confirmation, choose y or Y to enter the install script When prompted, enter a or A to perform an agent install. Input the postgresql database manager host IP that has the PCAPAnalyzer database install from your server. input the password that the server install generated for your PCAPAgent user. You will be asked to input a machineid. Choose a unique identifier for the host, like its hostname. input the absolute path where you want to install the agent. The team's recommendation is /opt/pcapagent/ . From the listed options, provide the system name of the interface you want the network sniffer to listen on. [!] you can input any to listen on all of the system's interfaces, but you can only have one entry. Enable the data logging with service packetstream start . Once this installation is complete, you will have a functional PCAPAnalyzer install to use.","title":"Post-install"},{"location":"getting-started/post-install/#installing-the-agent","text":"When you already have a full server install, you may want to install the agent on host machines to gather data from them. The install steps for the agent are: git clone the PCAPAnalyzer installer repo cd to the cloned repo on the pcapanalyzer folder Navigate to the install folder Run the installer.py script with python3 installer.py when prompted for a confirmation, choose y or Y to enter the install script When prompted, enter a or A to perform an agent install. Input the postgresql database manager host IP that has the PCAPAnalyzer database install from your server. input the password that the server install generated for your PCAPAgent user. You will be asked to input a machineid. Choose a unique identifier for the host, like its hostname. input the absolute path where you want to install the agent. The team's recommendation is /opt/pcapagent/ . From the listed options, provide the system name of the interface you want the network sniffer to listen on. [!] you can input any to listen on all of the system's interfaces, but you can only have one entry. Enable the data logging with service packetstream start . Once this installation is complete, you will have a functional PCAPAnalyzer install to use.","title":"Installing the agent"},{"location":"getting-started/prerequisites/","text":"Installation prerequisites Before you can set up a PCAPAnalyzer installation, you need to have a ready environment with the next elements: Server install This is the full server install that sets up the entire environment as front-end and back-end services for data gathering. You need to start with this one. Python3 is installed on your system You're running a system with Debian 10 or greater This system has access to the internet This system has at least 1 gigabyte of ram and a dual-core CPU This system has an active apache2 install, it can be a fresh one. You have administrator credentials to a local or remote PostgreSQL server You have administrator credentials for the machine and you're running the script as root A domain to point this website towards. It can be a local internal name. Agent install If you already have a full server install, you can install the agent on host machines to gather data from them. The prerequisites for the agent are: Python3 is installed on your system You're running a system with Debian 10 or greater This system has access to the internet This system has at least 1 gigabyte of ram and a dual-core CPU You have the agent login credentials given to you during the server install You have administrator credentials for the machine and you're running the script as root Once this setup is confirmed, you can proceed to installing the server.","title":"Prerequisites"},{"location":"getting-started/prerequisites/#installation-prerequisites","text":"Before you can set up a PCAPAnalyzer installation, you need to have a ready environment with the next elements:","title":"Installation prerequisites"},{"location":"getting-started/prerequisites/#server-install","text":"This is the full server install that sets up the entire environment as front-end and back-end services for data gathering. You need to start with this one. Python3 is installed on your system You're running a system with Debian 10 or greater This system has access to the internet This system has at least 1 gigabyte of ram and a dual-core CPU This system has an active apache2 install, it can be a fresh one. You have administrator credentials to a local or remote PostgreSQL server You have administrator credentials for the machine and you're running the script as root A domain to point this website towards. It can be a local internal name.","title":"Server install"},{"location":"getting-started/prerequisites/#agent-install","text":"If you already have a full server install, you can install the agent on host machines to gather data from them. The prerequisites for the agent are: Python3 is installed on your system You're running a system with Debian 10 or greater This system has access to the internet This system has at least 1 gigabyte of ram and a dual-core CPU You have the agent login credentials given to you during the server install You have administrator credentials for the machine and you're running the script as root Once this setup is confirmed, you can proceed to installing the server.","title":"Agent install"}]}